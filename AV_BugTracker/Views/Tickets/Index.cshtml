@using Microsoft.AspNet.Identity
@using AV_BugTracker.Helpers;
@model IEnumerable<AV_BugTracker.Models.Ticket>

@{
	ViewBag.Title = "Index";
	var ticketHelper = new TicketHelper();
}


<h2>Index</h2>
@if (User.IsInRole("Submitter"))
{
	<p>
		@Html.ActionLink("Create New", "Create")
	</p>
}

@if (Model.Count() == 0)
{
	<h3>You have no tickets to display</h3>
}
else
{	<table class="table table-styling table-hover, table-striped, table-info,table-success,table-success,table-info,table-danger,table-primary,table-secondary,table-light,table-active">
		<thead>
			<tr>
				<th>
					Project Name
				</th>
				<th>
					Priority
				</th>
				<th>
					Status
				</th>
				<th>
					Type
				</th>
				<th>
					Submitter
				</th>
				<th>
					Developer
				</th>
				<th>
					Issue
				</th>
				<th>
					@Html.DisplayNameFor(model => model.Created)
				</th>
				<th>

					{		@Html.DisplayNameFor(model => model.Updated)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.IsResolved)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.IsArchived)
				</th>
				<th></th>
			</tr>
		</thead>

		<tbody>
			@foreach (var item in Model)
			{
				<tr>
					<td>
						@Html.DisplayFor(modelItem => item.Project.Name)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.TicketPriority.Name)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.TicketStatus.Name)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.TicketType.Name)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Submitter.FullName)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Developer.FullName)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Issue)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Created)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Updated)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.IsResolved)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.IsArchived)
					</td>
					<td>
						@if (ticketHelper.CanEditTicket(item.Id))
						{
							@Html.ActionLink("Edit", "Edit", new { id = item.Id }) <span>|</span>
							@Html.ActionLink("Dashboard", "Dashboard", new { id = item.Id })
						}
					</td>
				</tr>
			}
		</tbody>
	</table>


<hr />

	if (User.IsInRole("Developer"))
	{
<h4>My Tickets</h4>
<table class="table">
	<tr>
		<th>
			@Html.DisplayNameFor(model => model.Project.Name)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.TicketPriority.Name)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.TicketStatus.Name)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.TicketType.Name)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.SubmitterId)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.DeveloperId)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.Issue)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.IssueDescription)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.Created)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.Updated)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.IsResolved)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.IsArchived)
		</th>
		<th></th>
	</tr>

	@foreach (var item in Model.Where(t => t.DeveloperId == User.Identity.GetUserId()))
	{
		<tr>
			<td>
				@Html.DisplayFor(modelItem => item.Project.Name)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.TicketPriority.Name)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.TicketStatus.Name)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.TicketType.Name)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.SubmitterId)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.DeveloperId)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Issue)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.IssueDescription)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Created)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Updated)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.IsResolved)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.IsArchived)
			</td>
			<td>
				@Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
				@Html.ActionLink("Details", "Details", new { id = item.Id }) |
			</td>
		</tr>
	}

</table>
	}
}

@section Scripts
{
	<script>
		$('.table').DataTable();
	</script>
}