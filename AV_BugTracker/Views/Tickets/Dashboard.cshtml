@using Microsoft.AspNet.Identity;
@using AV_BugTracker.Helpers;
@model AV_BugTracker.Models.Ticket

@{
	ViewBag.Title = "Dashboard";
	var ticketHelper = new TicketHelper();
}

<head>
	<link href="~/Content/style.css" rel="stylesheet" />
</head>






<div>
	<h4 class="text-center">Ticket Dashboard</h4>
	<hr />
	<div class="container">
		<div class="row">
			<div class="col table-responsive btn-gradient card bg-primary btn-air-primary">
				<table class="table table-responsive">
					<tr>
						<th>
							Project Name
						</th>

						<th>
							Priority
						</th>

						<th>
							Status
						</th>

						<th>
							Type
						</th>

						<th>
							Submitter
						</th>

						<th>
							Developer Assigned
						</th>

						<th>
							Issue
						</th>

						<th>
							Issue Description
						</th>

						<th>
							Created
						</th>

						<th>
							Updated
						</th>

						<th>
							Resolved?
						</th>
					</tr>

					<td>
						@Html.DisplayFor(model => model.Project.Name)
					</td>

					<td>
						@Html.DisplayFor(model => model.TicketPriority.Name)
					</td>

					<td>
						@Html.DisplayFor(model => model.TicketStatus.Name)
					</td>

					<td>
						@Html.DisplayFor(model => model.TicketType.Name)
					</td>

					<td>
						@Html.DisplayFor(model => model.Submitter.FullName)
					</td>

					<td>
						@Html.DisplayFor(model => model.Developer.FullName)
					</td>

					<td>
						@Html.DisplayFor(model => model.Issue)
					</td>

					<td>
						@Html.DisplayFor(model => model.IssueDescription)
					</td>

					<td>
						@Html.DisplayFor(model => model.Created)
					</td>

					<td>
						@Html.DisplayFor(model => model.Updated)
					</td>

					<td>
						@Html.DisplayFor(model => model.IsResolved)
					</td>
				</table>
			</div>
		</div>
	</div>
</div>
<hr />

<div class="container">
	<div class="col table-responsive card btn-gradient btn-air-primary">
		<br />
		<h2 class="text-center">Comments</h2>
		<p class="text-center">There are (@Model.Comments.Count) comments on this ticket.</p>

		@if (Model.Comments.Count != 0)
		{
			<table class="table" id="comment">
				<thead class="text-center">
					<tr>
						<th>
							Name
						</th>
						<th>
							Comment
						</th>
						<th>
							Posted On
						</th>
						<th></th>
					</tr>
				</thead>

				<tbody>
					@foreach (var item in Model.Comments)
					{
						<tr>
							<td>
								@Html.DisplayFor(modelItem => item.User.FirstName)
							</td>
							<td>
								@Html.DisplayFor(modelItem => item.Comment)
							</td>
							<td>
								@Html.DisplayFor(modelItem => item.Created)
							</td>
							@if (User.IsInRole("Admin") || User.IsInRole("Project Manager"))
							{
								<td style="color:black">
									@Html.ActionLink("Edit", "Edit", new { id = item.Id }) <span>|</span>
									@Html.ActionLink("Delete", "Delete", new { id = item.Id })
								</td>
							}
						</tr>
					}
				</tbody>

			</table>
		}
		else
		{
			<h4>No comments have been made for this ticket.</h4>
		}

		@if (ticketHelper.CanMakeComment(Model.Id))
		{
			using (Html.BeginForm("Create", "TicketComments", FormMethod.Post))
			{
				@Html.AntiForgeryToken()
				@Html.Hidden("TicketId", Model.Id)

				<div class="form-horizontal">
					<h4 class="text-center">Create Comment</h4>
					<hr />
					@Html.ValidationSummary(true, "", new { @class = "text-danger" })
					<div class="form-group">
						<div class="col-md-10">
							@Html.TextArea("Comment", new { htmlAttributes = new { @class = "form-control textForm" } })
						</div>
					</div>

					<div class="form-group">
						<div class="col-md-offset-2 col-md-10">
							<input type="submit" value="Create" class="btn btn-default" />
						</div>
					</div>
				</div>
			}
		}

		<p>
			@Html.ActionLink("Back to List", "Index")
		</p>
	</div>
	<div class="col table-responsive card card btn-gradient btn-air-primary">
		<h2 class="text-center">Attachments</h2>
		<p class="text-center">There are (@Model.Attachments.Count) attachments on this ticket.</p>
		<table>
			@using (Html.BeginForm("Create", "TicketAttachments", FormMethod.Post, new { enctype = "multipart/form-data" }))
			{
				@Html.AntiForgeryToken()
				@Html.Hidden("TicketId", Model.Id)

				<div class="form-group text-center">
					<br />
					@Html.Label("File Name", htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.Editor("FileName", new { htmlAttributes = new { @class = "form-control" } })
					</div>
				</div>

				<div class="form-group">
					@Html.Label("Description", htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.TextArea("AttachmentDescription", new { htmlAttributes = new { @class = "form-control" } })
					</div>
				</div>

				<div class="form-group">
					@Html.Label("Attachment", htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						<input type="file" name="file" />
					</div>
				</div>

				<div class="form-group">
					<div class="col-md-offset-2 col-md-10">
						<input type="submit" value="Add Attachment" class="btn btn-primary" />
					</div>
				</div>

			}

			<hr />

			<table class="table" id="attachment">
				<thead>
					<tr>
						<th>
							@Html.DisplayName("Icon")
						</th>
						<th>
							@Html.DisplayName("Name")
						</th>
						<th>
							@Html.DisplayName("Path")
						</th>
					</tr>
				</thead>


				<tbody>
					@foreach (var attachment in Model.Attachments.ToList())
					{
						<tr>
							<td>
							</td>
							<td>
								@Html.DisplayFor(modelItem => attachment.FileName)
							</td>
							<td>
								<a target="_blank" href="@attachment.FilePath">@attachment.FilePath</a>
							</td>
						</tr>
					}
				</tbody>

			</table>
		</table>
	</div>

	<div class="container btn-gradient card btn-air-primary">
		<h2 class="text-center">Histories</h2>
		<p class="text-center">There are (@Model.Histories.Count) changes that have been made on this ticket.</p>
		<table class="table" id="history">
			<thead>
				<tr>
					<th>
						Changed By
					</th>
					<th>
						Property
					</th>
					<th>
						Old Value
					</th>
					<th>
						New Value
					</th>
					<th>
						Changed On
					</th>
				</tr>
			</thead>

			<tbody>
				@foreach (var item in Model.Histories)
				{
					<tr>
						<td>
							@Html.DisplayFor(modelItem => item.User.FirstName)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.Property)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.OldValue)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.NewValue)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.ChangedOn)
						</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
</div>




@section Scripts
{
	<script>
		$('#comment').DataTable();
		$('#attachment').DataTable();
		$('#history').DataTable();
	</script>
}
